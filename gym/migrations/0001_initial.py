# Generated by Django 4.2.19 on 2025-02-18 13:04

import datetime
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(help_text='Enter your name', max_length=50, verbose_name='Name')),
                ('last_name', models.CharField(help_text='Enter your surname', max_length=50, verbose_name='Surname')),
                ('email', models.EmailField(help_text='Enter email adress', max_length=50, verbose_name='Email')),
                ('phone_number', models.CharField(help_text='Enter your phone number', max_length=20, verbose_name='Phone_number')),
            ],
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('start_date', models.DateField(default=datetime.date.today, help_text='Enter date', max_length=15, verbose_name='Start_date')),
                ('end_date', models.DateField(default=datetime.date.today, help_text='Enter date', max_length=15, verbose_name='End_date')),
                ('membership_type', models.CharField(blank=True, choices=[('W', 'Weekly'), ('q', 'Quarterly'), ('Y', 'Yearly'), ('t', 'Trial')], default='t', help_text='Membership type', max_length=1, verbose_name='type')),
                ('status', models.CharField(blank=True, choices=[('p', 'Processing'), ('a', 'Active'), ('e', 'Expired')], default='p', help_text='Membership status', max_length=1, verbose_name='status')),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='gym.client')),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week_day', models.CharField(blank=True, choices=[('1', 'Monday'), ('2', 'Tuesday'), ('3', 'Wednesday'), ('4', 'Thursday'), ('5', 'Friday'), ('6', 'Saturday'), ('7', 'Sunday')], default='1', help_text='Weekday', max_length=1, verbose_name='Weekday')),
                ('start_date', models.DateField(default=datetime.date.today, help_text='Enter date', max_length=15, verbose_name='Start_date')),
                ('end_date', models.DateField(default=datetime.date, help_text='Enter date', max_length=15, verbose_name='End_date')),
            ],
        ),
        migrations.CreateModel(
            name='Trainer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(help_text='Enter your name', max_length=50, verbose_name='Name')),
                ('last_name', models.CharField(help_text='Enter your surname', max_length=50, verbose_name='Surname')),
                ('email', models.CharField(help_text='Enter email adress', max_length=50, verbose_name='Email')),
                ('specialization', models.TextField(default='Specialization....', max_length=2000, verbose_name='Specialization')),
            ],
        ),
        migrations.CreateModel(
            name='TrainingSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter training sessions name', max_length=50, verbose_name='Name')),
                ('description', models.TextField(default='Sessions description...', max_length=2000, verbose_name='Description')),
                ('max_capacity', models.PositiveIntegerField(help_text='Enter max capacity', verbose_name='Capacity')),
                ('schedule', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='gym.schedule')),
            ],
        ),
        migrations.CreateModel(
            name='TrainerSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schedule', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='gym.schedule')),
                ('trainer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='gym.trainer')),
            ],
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rezervation_status', models.CharField(blank=True, choices=[('p', 'Processing'), ('r', 'Reserved'), ('e', 'Unavailable')], default='p', help_text='Membership status', max_length=1, verbose_name='rezervation_status')),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='gym.client')),
                ('training_session', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='gym.trainingsession')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField(help_text='Enter payment price', verbose_name='Price')),
                ('payment_date', models.DateField(default=datetime.date.today, help_text='Enter date', max_length=15, verbose_name='Payment_date')),
                ('membership', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='gym.membership')),
            ],
        ),
    ]
